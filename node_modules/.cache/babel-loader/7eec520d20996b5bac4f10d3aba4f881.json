{"ast":null,"code":"import _defineProperty from \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/src/MemeGenerator.js\";\nimport React, { Component } from 'react';\n\nvar MemeGenerator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MemeGenerator, _Component);\n\n  function MemeGenerator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MemeGenerator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MemeGenerator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var randNum = Math.floor(Math.random() * _this.state.allMemeImgs.length);\n      var randImg = _this.state.allMemeImgs[randNum].url;\n\n      _this.setState({\n        randomImage: randImg\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MemeGenerator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      f(\"https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var memes = response.data.memes;\n\n        _this2.setState({\n          allMemeImgs: memes\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top Text\",\n        value: this.state.topText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom Text\",\n        value: this.state.bottomText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"GEN\")), React.createElement(\"div\", {\n        className: \"meme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.randomImage,\n        alt: \"meme-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.topText), React.createElement(\"h2\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.bottomText)));\n    }\n  }]);\n\n  return MemeGenerator;\n}(Component);\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/media/esther/New Volume/MEST/STUDY/joy-react/meme-generator/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","state","topText","bottomText","randomImage","allMemeImgs","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","randNum","Math","floor","random","length","randImg","url","f","then","response","json","memes","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,UAAU,EAAC,EAFP;AAGJC,MAAAA,WAAW,EAAC,+BAHR;AAIJC,MAAAA,WAAW,EAAC;AAJR,K;;UAkBRC,Y,GAAe,UAAAC,KAAK,EAAI;AAAA,0BACKA,KAAK,CAACC,MADX;AAAA,UACXC,IADW,iBACXA,IADW;AAAA,UACLC,KADK,iBACLA,KADK;;AAEnB,YAAKC,QAAL,qBAAiBF,IAAjB,EAAuBC,KAAvB;AACH,K;;UAEFE,Y,GAAe,UAAAL,KAAK,EAAI;AACpBA,MAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAAKhB,KAAL,CAAWI,WAAX,CAAuBa,MAAlD,CAAhB;AACA,UAAMC,OAAO,GAAG,MAAKlB,KAAL,CAAWI,WAAX,CAAuBS,OAAvB,EAAgCM,GAAhD;;AACA,YAAKT,QAAL,CAAc;AACVP,QAAAA,WAAW,EAACe;AADF,OAAd;AAGH,K;;;;;;;wCAvBmB;AAAA;;AACfE,MAAAA,CAAC,CAAC,mCAAD,CAAD,CACIC,IADJ,CACS,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADjB,EAEIF,IAFJ,CAES,UAAAC,QAAQ,EAAI;AAAA,YACPE,KADO,GACEF,QAAQ,CAACG,IADX,CACPD,KADO;;AAEd,QAAA,MAAI,CAACd,QAAL,CAAc;AACVN,UAAAA,WAAW,EAACoB;AADF,SAAd;AAGH,OAPJ;AAQH;;;6BAgBO;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE,KAAKb,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,WAAW,EAAC,UAHhB;AAII,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,OAJtB;AAKI,QAAA,QAAQ,EAAE,KAAKI,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,YAFT;AAGI,QAAA,WAAW,EAAC,aAHhB;AAII,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAJtB;AAKI,QAAA,QAAQ,EAAE,KAAKG,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfJ,CADJ,EAkBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWG,WAArB;AAAkC,QAAA,GAAG,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKH,KAAL,CAAWC,OAAhC,CAFJ,EAGI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKD,KAAL,CAAWE,UAAnC,CAHJ,CAlBJ,CADJ;AA0BH;;;;EA5DuBJ,S;;AA+D5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass MemeGenerator extends Component {\n    state = { \n        topText:\"\",\n        bottomText:\"\",\n        randomImage:\"http://i.imgflip.com/1bij.jpg\",\n        allMemeImgs:[],\n     }\n\n    componentDidMount() {\n         f(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({\n                    allMemeImgs:memes\n                })\n            })\n     }\n\n    handleChange = event => {\n         const { name, value } = event.target \n         this.setState({ [name]:value })\n     }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randImg = this.state.allMemeImgs[randNum].url \n        this.setState({\n            randomImage:randImg\n        })\n    }\n\n    render() { \n        return ( \n            <div>\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                    <input \n                        type=\"text\"     \n                        name=\"topText\" \n                        placeholder=\"Top Text\"\n                        value={this.state.topText} \n                        onChange={this.handleChange}\n                    />\n                    <input \n                        type=\"text\" \n                        name=\"bottomText\" \n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText} \n                        onChange={this.handleChange}\n                    />\n                    <button>GEN</button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImage} alt=\"meme-img\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div> \n        );\n    }\n}\n \nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}